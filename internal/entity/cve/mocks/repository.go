// Code generated by mockery v2.3.0. DO NOT EDIT.

package mocks

import (
	context "context"

	cve "github.com/divpro/cve/internal/entity/cve"
	mock "github.com/stretchr/testify/mock"
)

// Repository is an autogenerated mock type for the Repository type
type Repository struct {
	mock.Mock
}

// Find provides a mock function with given fields: ctx, filter
func (_m *Repository) Find(ctx context.Context, filter *cve.FindFilter) ([]cve.CVE, error) {
	ret := _m.Called(ctx, filter)

	var r0 []cve.CVE
	if rf, ok := ret.Get(0).(func(context.Context, *cve.FindFilter) []cve.CVE); ok {
		r0 = rf(ctx, filter)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]cve.CVE)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *cve.FindFilter) error); ok {
		r1 = rf(ctx, filter)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Replace provides a mock function with given fields: ctx, _a1
func (_m *Repository) Replace(ctx context.Context, _a1 []cve.CVE) error {
	ret := _m.Called(ctx, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, []cve.CVE) error); ok {
		r0 = rf(ctx, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
